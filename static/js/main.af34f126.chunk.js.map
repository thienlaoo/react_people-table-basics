{"version":3,"sources":["api.ts","components/PersonLink.tsx","components/PeopleTable.tsx","components/Loader/Loader.tsx","helpers/getPreparedPeople.tsx","components/PeoplePage.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","name","sex","slug","to","className","cn","PeopleTable","people","selectedPerson","map","born","died","fatherName","motherName","mother","father","isSelected","Loader","getPeoplesWithParents","peopleData","peopleMap","Map","forEach","currentPerson","set","getPeopleMap","get","PeoplePage","useState","setPeople","useParams","isLoading","setIsLoading","fetchData","data","preparedData","console","log","useEffect","Navbar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.af34f126.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport React from 'react';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    slug,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-link': sex === 'm',\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person[];\n  selectedPerson: string;\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedPerson }) => {\n/*   const findMother = (mothername: string) => people.find(p => p.motherName === mothername) */\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            mother,\n            father,\n          } = person;\n          const isSelected = selectedPerson === person.slug;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={cn({ 'has-background-warning': isSelected })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother\n                  ? (\n                    <PersonLink person={mother} />\n                  ) : (\n                    motherName || '-'\n                  )}\n              </td>\n\n              <td>\n                {father\n                  ? (\n                    <PersonLink person={father} />\n                  ) : (\n                    fatherName || '-'\n                  )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\n\nconst getPeopleMap = (peopleData: Person[]) => {\n  const peopleMap = new Map();\n\n  peopleData.forEach(currentPerson => peopleMap.set(\n    currentPerson.name, currentPerson,\n  ));\n\n  return peopleMap;\n};\n\nexport const getPeoplesWithParents = (peopleData: Person[]) => {\n  const peopleMap = getPeopleMap(peopleData);\n\n  return peopleData.map(person => {\n    const father = peopleMap.get(person.fatherName);\n    const mother = peopleMap.get(person.motherName);\n\n    return {\n      ...person,\n      father,\n      mother,\n    };\n  });\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\nimport { Loader } from './Loader';\nimport { getPeoplesWithParents } from '../helpers/getPreparedPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug = '' } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      const data = await getPeople();\n      const preparedData = getPeoplesWithParents(data);\n\n      setPeople(preparedData);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.log(`something went wrong:${error}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {isLoading\n        ? <Loader />\n        : <PeopleTable people={people} selectedPerson={slug} />}\n    </>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n          <NavLink\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport {\n  Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n              <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            </Route>\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}